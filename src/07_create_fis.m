% ======================================================================
% Section 7: Make the FIS File for MagLev Project
% Part of: Neuro-Fuzzy Control for Magnetic Levitation Systems
% Author: Shakila Praveen Rathnayake
% Email: shakilabeta@gmail.com
% ======================================================================

```
% 7.3 Make the FIS File for MagLev Project

% Step 1: Create the Mamdani FIS
fis_hybrid = mamfis('Name', 'MagLev');

% Step 2: Add Inputs with Defined Ranges
fis_hybrid = addInput(fis_hybrid, [-1 1], 'Name', 'Error');
fis_hybrid = addInput(fis_hybrid, [-10 10], 'Name', 'ErrorRate');

% Step 3: Add Output with Defined Range
fis_hybrid = addOutput(fis_hybrid, [-3 3], 'Name', 'Output');

% Step 4: Define Membership Functions (MFs)

% Define MFs for 'Error'
error_MFs = [ ...
    struct('name', 'NL', 'type', 'gbellmf', 'params', [0.2, 2, -1]), ...
    struct('name', 'N',  'type', 'gbellmf', 'params', [0.15, 2, -0.6]), ...
    struct('name', 'NM', 'type', 'gbellmf', 'params', [0.1, 2, -0.4]), ...
    struct('name', 'Z',  'type', 'gbellmf', 'params', [0.1, 2, 0]), ...
    struct('name', 'PM', 'type', 'gbellmf', 'params', [0.1, 2, 0.4]), ...
    struct('name', 'P',  'type', 'gbellmf', 'params', [0.15, 2, 0.6]), ...
    struct('name', 'PL', 'type', 'gbellmf', 'params', [0.2, 2, 1])];
for i = 1:length(error_MFs)
    fis_hybrid = addMF(fis_hybrid, 'Error', error_MFs(i).type, error_MFs(i).params, 'Name', error_MFs(i).name);
end

% Define MFs for 'ErrorRate'
errorRate_MFs = [ ...
    struct('name', 'NL', 'type', 'gbellmf', 'params', [-10, 5, .]), ...
    struct('name', 'NM', 'type', 'gbellmf', 'params', [5, 2, -5]), ...
    struct('name', 'PM', 'type', 'gbellmf', 'params', [5, 2, 5]), ...
    struct('name', 'PL', 'type', 'gbellmf', 'params', [10, 2, 10])];
for i = 1:length(errorRate_MFs)
    fis_hybrid = addMF(fis_hybrid, 'ErrorRate', errorRate_MFs(i).type, errorRate_MFs(i).params, 'Name', errorRate_MFs(i).name);
end

% Define MFs for 'Output'
output_MFs = [ ...
    struct('name', 'NL', 'type', 'trimf', 'params', [-3 -2 -1]), ...
    struct('name', 'NM', 'type', 'trimf', 'params', [-2 -1 0]), ...
    struct('name', 'Z',  'type', 'trimf', 'params', [-1 0 1]), ...
    struct('name', 'PM', 'type', 'trimf', 'params', [0 1 2]), ...
    struct('name', 'PL', 'type', 'trimf', 'params', [1 2 3])];
for i = 1:length(output_MFs)
    fis_hybrid = addMF(fis_hybrid, 'Output', output_MFs(i).type, output_MFs(i).params, 'Name', output_MFs(i).name);
end

% Step 5: Generate and Add Rules
ruleList = [ ...
    1 1 1 1 1; ...
    2 2 2 1 1; ...
    3 3 3 1 1; ...
    4 4 4 1 1; ...
    5 1 5 1 1; ...
    6 2 4 1 1; ...
    7 3 3 1 1; ...
    1 4 2 1 1];
fis_hybrid = addRule(fis_hybrid, ruleList);

% Step 6: Save the FIS
writeFIS(fis_hybrid, 'MagLev.fis');
```